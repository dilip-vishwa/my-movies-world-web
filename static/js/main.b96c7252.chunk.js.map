{"version":3,"sources":["components/common/copyright.js","config/development.js","config/production.js","config/index.js","components/login/signin.js","components/common/alerter.js","components/movies/list/movie_list.js","components/movies/index.js","components/login/logout.js","components/movies/crud/movie_form.js","components/common/page_element.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","config","endpoint","process","env","NODE_ENV1","prod_endpoint","dev_endpoint","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","useFormInput","initialValue","useState","value","setValue","onChange","e","target","classes","username","password","history","useHistory","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","onClick","preventDefault","post_json_data","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","push","window","location","reload","localStorage","setItem","auth_token","Grid","container","item","xs","Box","mt","Alert","props","elevation","root","CustomizedSnackbars","React","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","message","icon","marginRight","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","footer","link","textDecoration","circle","borderRadius","textAlign","font","MoviesList","error","setError","isLoaded","setIsLoaded","items","setItems","openAlert","setOpenAlert","alertMessage","setAlertMessage","isLoggedIn","getItem","loggedIn","useEffect","fetchOptions","res","result","console","log","deleteMovie","movie_id","setTimeout","style","position","float","zIndex","onKeyUp","movie_name","length","map","sm","md","Card","CardContent","gutterBottom","Tooltip","title","fontSize","fontVariant","imdb_score","fontStyle","director","popularity","genre","tag","i","Chip","size","CardActions","Edit","ResponsiveDialog","button_text","Delete","customFunction","LoggedInPage","Logout","removeItem","formControl","minWidth","chips","flexWrap","chip","noLabel","MovieForm","useParams","formOperation","setFormOperation","genreName","setGenreName","movieName","imdbScore","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","undefined","InputLabel","Select","labelId","multiple","input","Input","renderValue","selected","MenuItem","url","TopBar","logout_login_button","to","AppBar","Toolbar","noWrap","Footer","PossibleRoutes","logged_in","setloggedIn","loggin_state","Fragment","path","child","setId","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClickOpen","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b96c7252.chunk.js","sourcesContent":["import Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nexport default Copyright;","const config = {\n    endpoint: 'http://localhost:8000' \n}\nexport default config;","const config = {\n    endpoint: 'https://my-movies-world-api.herokuapp.com' \n};\nexport default config;","import process from \"process\";\nimport dev_endpoint from './development';\nimport prod_endpoint from './production';\n\n\nconst env = process.env.NODE_ENV1 || 'production';\n\nlet endpoint = env === \"production\" ? prod_endpoint : dev_endpoint\nconst config = {\n    endpoint: endpoint.endpoint\n}\n\nexport default config;\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../common/copyright';\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport endpoint from '../../config';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n   \n    const handleChange = e => {\n      setValue(e.target.value);\n    }\n    return {\n      value,\n      onChange: handleChange\n    }\n  }\n\n\n  const classes = useStyles();\n  let username = useFormInput(\"\");\n  let password = useFormInput(\"\");\n  const history = useHistory();\n  // function \n\n  function handleFormSubmit(e) {\n    e.preventDefault()\n    const post_json_data = {\n      username: username.value,\n      password: password.value\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify(post_json_data),\n      // credentials: 'include'\n    };\n    fetch(`${endpoint.endpoint}/users/`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if(data['result'] === 'Success') {\n            history.push(`/movies`);\n            window.location.reload(false);\n          }\n          localStorage.setItem('auth_token', data.auth_token);\n          localStorage.setItem('logged_in', \"true\");\n            // const cookies = new Cookies();\n            // cookies.set('auth_token', data.auth_token);\n            // console.log(cookies.get('auth_token')); // Pacman\n            // this.setState({ postId: data.id })\n        });\n    }\n\n  \n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...username}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleFormSubmit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function CustomizedSnackbars(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(props.open || false);\n\n    //   const handleClick = () => {\n    //     setOpen(true);\n    //   };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            {/* <Button variant=\"outlined\" onClick={handleClick}>\n        Open success snackbar\n      </Button> */}\n            <Snackbar open={props.open} autoHideDuration={4000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"success\">\n                    {props.message}\n                </Alert>\n            </Snackbar>\n            {/* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert> */}\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ResponsiveDialog } from '../../common/page_element';\nimport CustomizedSnackbars from '../../common/alerter';\nimport endpoint from '../../../config';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Delete, Edit } from '@material-ui/icons';\n\n\n// function MyComponent() {\n//   const theme = useTheme();\n//   const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n//   return <Dialog fullScreen={fullScreen} />\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n    link: {\n        color: \"#FFFFFF\",\n        textDecoration: \"none\"\n    },\n    circle: {\n        borderRadius: \"50%\",\n        width: \"34px\",\n        height: \"34px\",\n        padding: \"10px\",\n        background: \"#538b002e\",\n        // border: \"3px solid #000\",\n        color: \"#000\",\n        textAlign: \"center\",\n        font: \"32px Arial, sans-serif\"\n    }\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\nfunction MoviesList() {\n    const history = useHistory();\n    function onClickFilterGenre(e) {\n        history.push(`/movies?genre=${e}`);\n    }\n\n    const classes = useStyles();\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [openAlert, setOpenAlert] = useState(false)\n    const [alertMessage, setAlertMessage] = useState(\"\")\n    let isLoggedIn = localStorage.getItem('logged_in') == \"true\" ? true : false;\n    const [loggedIn, setLoggedIn] = useState(isLoggedIn)\n\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        const fetchOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${localStorage.getItem('auth_token')}` },\n            // body: JSON.stringify(post_json_data),\n        }\n        fetch(`${endpoint.endpoint}/movies?page=1&limit=12`, fetchOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result['result'] === 'Unauthorized') {\n                        history.push(`/login`);\n                    } else {\n                        setIsLoaded(true);\n                        console.log(result['result']);\n                        setItems(result['result']);\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        // return (\n        // <ul>\n        //     {items.map(item => (\n        //     <li key={item.id}>\n        //         {item.name} {item.price}\n        //     </li>\n        //     ))}\n        // </ul>\n        // );\n    }\n\n    function deleteMovie(movie_id) {\n        // setOpen(true);\n        const fetchOptions = {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${localStorage.getItem('auth_token')}` },\n            // body: JSON.stringify(post_json_data),\n        }\n        fetch(`${endpoint.endpoint}/movies?movie_id=${movie_id}`, fetchOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result['result'] === 'Unauthorized') {\n                        history.push(`/login`);\n                    } else {\n                        setIsLoaded(true);\n                        setAlertMessage(`Successfully deleted Movie Data. Reloading Movie List`)\n                        setOpenAlert(true);\n                        setTimeout(function () {\n                            history.push(`/movies`);\n                            window.location.reload(false);\n                        }, 4000);\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n\n    }\n\n    function searchMovie(e) {\n        let movie_name = e.target.value;\n        // setOpen(true);\n        const fetchOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${localStorage.getItem('auth_token')}` },\n            // body: JSON.stringify(post_json_data),\n        }\n        fetch(`${endpoint.endpoint}/movies/?movie_name=${movie_name}&page=1&limit=12`, fetchOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result['result'] === 'Unauthorized') {\n                        history.push(`/login`);\n                    } else {\n                        setIsLoaded(true);\n                        setItems(result['result']);\n                    }\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n\n    }\n\n    const title = \"Are you sure?\";\n    const message = \"This will delete the movie\";\n    return (\n        <main>\n\n            {/* Hero unit */}\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <CustomizedSnackbars open={openAlert} message={alertMessage} />\n                <div style={{ position: \"relative\", margin: \"auto\", float: \"left\", zIndex: 2000 }}>\n                    {loggedIn && <Button variant=\"contained\" color=\"secondary\"><Link className={classes.link} href=\"/movies/create\">Add Movies</Link></Button>}\n                </div>\n                <div style={{ position: \"relative\", margin: \"auto\", float: \"right\", zIndex: 2000 }}>\n                    {<TextField id=\"standard-basic\" label=\"Search Movie\" onKeyUp={searchMovie} />}\n                </div>\n                {/* <p>Click on Any Item and filter with it</p> */}\n                <div style={{ position: \"relative\", margin: \"auto\", textAlign: \"center\"}}><b>Showing/Found Result: {items.length || \"No Movie with current search\"}</b></div>\n                <Grid container spacing={4}>\n                    {items.map((card) => (\n                        <Grid item key={card.movie_id} xs={12} sm={6} md={4}>\n                            <Card className={classes.card}>\n                                {/* <CardMedia\n                                    className={classes.cardMedia}\n                                    image=\"https://source.unsplash.com/random\"\n                                    title=\"Image title\"\n                                /> */}\n                                <CardContent className={classes.cardContent}>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {card.name}\n                                        <Tooltip title=\"IMDB Score\">\n                                            <span className={classes.circle} style={{ fontSize: \"10px\", color: \"green\", fontVariant: \"bold\", float: \"right\" }}>{card.imdb_score}</span>\n                                        </Tooltip>\n                                    </Typography>\n                                    <Typography>\n                                        <span style={{ fontSize: \"10px\" }}>By</span> <span style={{ fontStyle: \"italic\" }}>{card.director}</span>\n                                        <Tooltip title=\"Popularity\">\n                                            <span className={classes.circle} style={{ fontSize: \"10px\", color: \"red\", fontVariant: \"bold\", float: \"right\" }}>{card.popularity}</span>\n                                        </Tooltip>\n                                    </Typography>\n                                    <Typography>\n                                        {card.genre.map((tag, i) => [\n                                            i > 0 && \" \",\n                                            // <Tag key={i} tag= />\n                                            <Chip key={i} size=\"small\" label={tag} component=\"a\" href=\"#chip\"\n                                            // clickable onClick={() => onClickFilterGenre(tag) }\n                                            />\n                                        ])}\n                                    </Typography>\n                                </CardContent>\n\n                                <CardActions>\n                                    {loggedIn && <Button color=\"primary\"><Link href={\"/movies/\" + card.movie_id}><Edit color=\"primary\"  fontSize=\"small\"/></Link></Button>}\n                                    {loggedIn && <ResponsiveDialog button_text={<Delete color=\"error\" fontSize=\"small\"/>} id={card.movie_id} customFunction={deleteMovie} title={title} message={message} />}\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                    {items.length !== 0 && \n                    <div style={{ position: \"relative\", margin: \"auto\" }}>\n                        {loggedIn && <Button variant=\"contained\" color=\"primary\">fetch More Movies (Not implemented)</Button>}\n                    </div>\n                    }\n\n                </Grid>\n            </Container>\n        </main>\n    )\n}\n\nexport default MoviesList;","import React from 'react';\nimport Movies from './list/movie_list'\n\nexport default function LoggedInPage() {\n  return (\n      <Movies />\n  );\n}\n","import { useHistory } from \"react-router-dom\";\nimport Movies from '../movies/index'\n\nfunction Logout() {\n    const history = useHistory();\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('logged_in');\n    history.push(`/`);\n    window.location.reload(false);\n    return (\n        <Movies />\n    )\n}\n\nexport default Logout;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory, useParams } from 'react-router';\nimport { Button } from '@material-ui/core';\nimport CustomizedSnackbars from '../../common/alerter';\nimport Movies from '../../movies/index'\nimport { matchPath } from 'react-router'\nimport endpoint from '../../../config';\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange,\n    setValue\n  }\n}\n\n// function useQuery() {\n//   return new URLSearchParams(useLocation().search);\n// }\n\n\n\nexport default function MovieForm() {\n  // const match = matchPath(this.props.history.location.pathname, {\n  //         path: '/movies/:id',\n  //         exact: true,\n  //         strict: false\n  //       })\n  // let { movie_id } = match.params.movie_id;\n  let { movie_id } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [formOperation, setFormOperation] = useState('create');\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [genreName, setGenreName] = useState([]);\n  const movieName = useFormInput(\"\");\n  const director = useFormInput(\"\");\n  const imdbScore = useFormInput(\"\");\n  const popularity = useFormInput(\"\");\n  const [openAlert, setOpenAlert] = useState(false)\n  const [alertMessage, setAlertMessage] = useState(\"\")\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  const handleChange = (event) => {\n    setGenreName(event.target.value);\n  };\n\n  const onClickSubmit = (e) => {\n    e.preventDefault()\n    let post_json_data = {\n      name: movieName.value,\n      imdb_score: imdbScore.value,\n      popularity: popularity.value,\n      genre: genreName,\n      director: director.value\n    }\n    const fetchOptions = {\n      headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${localStorage.getItem('auth_token')}` },\n      body: JSON.stringify(post_json_data),\n    }\n    let url = `${endpoint.endpoint}/movies`\n    fetchOptions['method'] = 'POST'\n    if (formOperation === 'update') {\n      url = `${endpoint.endpoint}/movies?movie_id=${movie_id}`\n      fetchOptions['method'] = 'PUT'\n    }\n    fetch(url, fetchOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n\n          setAlertMessage(`Successfully ${formOperation}d Movie Data. Reloading Movie List`)\n          setOpenAlert(true);\n          setTimeout(function () {\n            history.push(`/movies`);\n            // window.location.reload(false);\n          }, 5000);\n\n          // return (\n          //     <Movies />\n          // )\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }\n\n\n  useEffect(() => {\n    if (movie_id) {\n      setFormOperation(\"update\")\n    }\n    if (movie_id === undefined) {\n      setFormOperation(\"create\")\n    }\n    const fetchOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${localStorage.getItem('auth_token')}` },\n      // body: JSON.stringify(post_json_data),\n    }\n    fetch(`${endpoint.endpoint}/movies/genre`, fetchOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result['result']);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n\n    if (movie_id !== undefined) {\n      fetch(`${endpoint.endpoint}/movies/?movie_id=${movie_id}`, fetchOptions)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            result = result['result']\n            movieName.setValue(result['name'])\n            imdbScore.setValue(result['imdb_score'])\n            popularity.setValue(result['popularity'])\n            setGenreName(result['genre'])\n            director.setValue(result['director'])\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }\n  }, [])\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <CustomizedSnackbars open={openAlert} message={alertMessage} />\n      {/* <p>Click on Any Item and filter with it</p> */}\n      {/* End hero unit */}\n      <Typography variant=\"h6\" gutterBottom>\n        Movie Information\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"name\"\n            name=\"name\"\n            label=\"Movie Name\"\n            fullWidth\n            // autoComplete=\"given-name\"\n            value={movieName.value}\n            onChange={movieName.onChange}\n          />\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          <TextField\n            required\n            id=\"popularity\"\n            name=\"popularity\"\n            label=\"Popularity\"\n            fullWidth\n            // autoComplete=\"popularity\"\n            value={popularity.value}\n            onChange={popularity.onChange}\n          />\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          <TextField\n            required\n            id=\"director\"\n            name=\"director\"\n            label=\"Director\"\n            fullWidth\n            // autoComplete=\"shipping address-line1\"\n            value={director.value}\n            onChange={director.onChange}\n          />\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          {/* <FormControl className={classes.formControl}> */}\n          <InputLabel id=\"genre\">Genre*</InputLabel>\n          <Select\n            fullWidth\n            labelId=\"genre\"\n            id=\"genre\"\n            multiple\n            value={genreName}\n            onChange={handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={(selected) => (\n              <div className={classes.chips}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {items.map((name) => (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n          {/* </FormControl> */}\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          <TextField\n            required\n            id=\"imdb_score\"\n            name=\"imdb_score\"\n            label=\"Imdb Score\"\n            fullWidth\n            value={imdbScore.value}\n            onChange={imdbScore.onChange}\n          // autoComplete=\"shipping postal-code\"\n          />\n        </Grid>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" onClick={onClickSubmit}>\n          {formOperation === 'create' ? 'Create' : 'Update'} Movie\n        </Button>\n      </Grid>\n    </Container>\n  );\n}","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Copyright from '../common/copyright'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport SignIn from '../login/signin';\nimport Logout from '../login/logout';\nimport Movies from '../movies'\nimport MovieForm from '../movies/crud/movie_form'\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CustomizedSnackbars from './alerter';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\nfunction Hero() {\n    const classes = useStyles();\n    return (\n        <div className={classes.heroContent}>\n            <Container maxWidth=\"sm\">\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Movies List\n            </Typography>\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                    Something short and leading about the collection below—its contents, the creator, etc.\n                    Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                    entirely.\n            </Typography>\n                <div className={classes.heroButtons}>\n                    <Grid container spacing={2} justify=\"center\">\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"primary\">\n                                Main call to action\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"outlined\" color=\"primary\">\n                                Secondary action\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nfunction TopBar(props) {\n    const classes = useStyles();\n    const [openAlert, setOpenAlert] = useState(false)\n    const [alertMessage, setAlertMessage] = useState(\"\")\n\n    let logout_login_button = <Link to=\"login\" style={{ color: \"#FFFFFF\", textDecoration: \"none\", float: \"right\"}}>Login</Link>\n    if (props.loggedIn === \"true\") {\n        logout_login_button = <Link to=\"logout\" style={{ color: \"#FFFFFF\", textDecoration: \"none\", float: \"right\"}}>Logout</Link>\n    }\n    return (\n        <AppBar position=\"relative\">\n            <CustomizedSnackbars open={openAlert} message={alertMessage}/>\n            <Toolbar>\n                <CameraIcon className={classes.icon} />\n                <Typography variant=\"h6\" color=\"inherit\" noWrap style={{width: \"100%\"}}>\n                    Movies List\n                </Typography>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap style={{width: \"100%\", color: \"white\"}}>\n                    {logout_login_button}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nfunction Footer() {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footer}>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                Footer\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Something here to give the footer a purpose!\n            </Typography>\n            <Copyright />\n        </footer>\n    )\n}\n\nfunction check_user_logged_in() {\n    let data = localStorage.getItem('logged_in') || \"false\";\n    return data\n}\n\nfunction PossibleRoutes() {\n    let [logged_in, setloggedIn] = useState(\"false\")\n    useEffect(() => {\n        let loggin_state = check_user_logged_in()\n        setloggedIn(loggin_state)\n    }, []);\n    return (\n        <Router>\n            <React.Fragment>\n                <CssBaseline />\n                <TopBar loggedIn={logged_in} />\n\n                {/* <div> */}\n                {/* <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/about\">About</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/users\">Users</Link>\n                            </li>\n                        </ul>\n                    </nav> */}\n\n                {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/login\">\n                        <SignIn />\n                    </Route>\n                    <Route path=\"/logout\">\n                        <Logout />\n                    </Route>\n                    <Route path=\"/movies/create\" child={<MovieForm />}>\n                        <MovieForm />\n                    </Route>\n                    <Route path=\"/movies/:movie_id\" child={<MovieForm />}>\n                        <MovieForm />\n                    </Route>\n                    <Route path=\"/movies\">\n                        <Movies />\n                    </Route>\n                    <Route path=\"/\">\n                        <Movies />\n                    </Route>\n                </Switch>\n                {/* </div> */}\n                <Footer />\n            </React.Fragment>\n        </Router>\n    );\n}\n\n\nfunction ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [id, setId] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = (id) => {\n    setOpen(true);\n    setId(id)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAgreeAndClose = () => {\n    setOpen(false);\n    props.customFunction(id)\n  };\n\n  return (\n    <div>\n      <Button color=\"primary\" onClick={() => {handleClickOpen(props.id)}}>\n        {props.button_text}\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {props.message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleAgreeAndClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport { TopBar, Footer, PossibleRoutes, ResponsiveDialog };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/login/index.css';\nimport {PossibleRoutes} from './components/common/page_element'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <PossibleRoutes />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}